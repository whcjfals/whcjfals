//IRremote ESP 8266 라이브러리중 IRsendDemo, mqtt_esp8266를 참고하여 만듦
//IRsendDemo는 적외선 송신 목적
//mqtt_esp8266은 wifi를 통해 mqtt서버와 통신 목적

#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <Servo.h>

Servo servo;

//적외선 송신 센서 핀 번호 초기화
const uint16_t kIrLed = D7;
IRsend irsend(kIrLed); 

//wifi 아이디
const char* ssid = "FREE_U+zone";

//wifi 비번
const char* password = "";

//서버 주소
const char* mqtt_server = "broker.mqtt-dashboard.com";

//와이파이 연결
WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE	(50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

//이 함수를 통해 데잍터를 받아 온다.
//여러개의 Topic을 구독해놔서 Topic별로 분할하여 코드 작성 
void callback(char* topic, byte* payload, unsigned int length) {
  //Topic별로 쉽게 분할 하기 위해 char* 타입을 String타입으로 변환
  String topicStr = String(topic);
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  
  //구체적인 명령을 받아오기 위해 char타입 payload를 String타입으로 변환 
  String cmd = "";
  for (int i = 0; i < length; i++) {
    char c = (char)payload[i];
    Serial.print(c);
    cmd+=c;
  }
  Serial.println();
 
  if(topicStr == "jcm/tvcontrol"){
    if (cmd == "Tv on/off") {
      irsend.sendNEC(0x20DF10EF);
    }
    else if (cmd == "Volume Up") {
      irsend.sendNEC(0x5B0340BF);
    }
    else if (cmd == "Volume Down") {
      irsend.sendNEC(0x5B03C03F);
    }
    else if (cmd == "Mute") {
      irsend.sendNEC(0x5B03906F);
    }
    else if (cmd == "Channel Up") {
      irsend.sendNEC(0x5B0300FF);
    }
    else if (cmd == "Channel Down") {
      irsend.sendNEC(0x5B03807F);
    }
  }
  
  if(topicStr == "jcm/lightcontrol"){
    if(cmd =="On"){
      servo.write(150);
    }else if(cmd=="Off"){
      servo.write(80);
    }
  }

  if(topicStr == "jcm/accontrol"){
    if(cmd =="AcOn"){
      irsend.sendLG(0x8800909, 28);
    }else if(cmd=="AcOff"){
      irsend.sendLG(0x88C0051, 28);
    }
  }
}

// 구독 등록, mqtt 서버와 연결하는 함수
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("outTopic", "hello world");
      // ... and resubscribe

      //mqtt borker는 전 세계 사람이 공유하여 사용하기 때문에 중복되지 않을만한 닉네임으로 선정한다.
      client.subscribe("jcm/tvcontrol");
      client.subscribe("jcm/lightcontrol");
      client.subscribe("jcm/accontrol");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  servo.attach(D6);
  irsend.begin();
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop(); 
}
